{"version":3,"sources":["../../src/parsers/unionparser.js"],"names":["request","require","express","myApiKey","app","twitch","start","listen","main","src","getLiveChatId","liveChatId","console","log","requestChatMessages","chatMessageUrl","nextPageToken","requestProperties","part","key","maxResults","pageToken","url","qs","error","response","body","JSON","parse","items","participants","item","appendFileSync","authorDetails","displayName","snippet","displayMessage","setTimeout","pollingIntervalMillis","videoId","callback","bodyObj","options","connection","cluster","reconnect","identity","username","password","channels","client","connect","on","channel","user","message","self"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\nimport { read, readFileSync } from 'fs';\r\nconst request = require('request');\r\nconst express = require('express');\r\nconst myApiKey = 'AIzaSyARsNN4cTNsHicQ8JpZGTAuJP877w4YY7g';\r\nconst app = express();\r\nconst twitch = require('twitch-js');\r\n\r\nexport function start() {\r\n    app.listen(4000, function() {\r\n        main();\r\n    });\r\n    const main = function() {\r\n        let src = readFileSync('src.txt', 'utf8');\r\n        getLiveChatId(src, function(liveChatId) {\r\n            console.log('liveChatId = ' + liveChatId);\r\n\r\n            if (liveChatId) {\r\n                requestChatMessages('', liveChatId);\r\n            }\r\n        });\r\n    };\r\n\r\n    const chatMessageUrl =\r\n        'https://www.googleapis.com/youtube/v3/liveChat/messages';\r\n\r\n    const requestChatMessages = function(nextPageToken, liveChatId) {\r\n        const requestProperties = {\r\n            liveChatId: liveChatId,\r\n            part: 'snippet, id, authorDetails',\r\n            key: myApiKey,\r\n            maxResults: 200,\r\n            pageToken: nextPageToken,\r\n        };\r\n        request({ url: chatMessageUrl, qs: requestProperties }, function(\r\n            error,\r\n            response,\r\n            body\r\n        ) {\r\n            let key = readFileSync('key.txt', 'utf8');\r\n            body = JSON.parse(body);\r\n            if (body.items) {\r\n                let participants = require('fs');\r\n                for (body.items.item of body.items) {\r\n                    //if (body.items.item.snippet.displayMessage === key) {\r\n                    participants.appendFileSync(\r\n                        './participants.txt',\r\n                        body.items.item.authorDetails.displayName +\r\n                        ' : ' +\r\n                        body.items.item.snippet.displayMessage +\r\n                        '\\n'\r\n                    );\r\n                    // console.log(\r\n                    //     item.authorDetails.displayName + ':' + item.snippet.displayMessage\r\n                    // );\r\n                    // }\r\n                }\r\n            }\r\n            setTimeout(function() {\r\n                requestChatMessages(body.nextPageToken, liveChatId);\r\n            }, body.pollingIntervalMillis);\r\n        });\r\n    };\r\n\r\n    const getLiveChatId = function(videoId, callback) {\r\n        const url =\r\n            'https://www.googleapis.com/youtube/v3/videos?id=' +\r\n            videoId +\r\n            '&key=' +\r\n            myApiKey +\r\n            '&part=liveStreamingDetails,snippet';\r\n\r\n        request(url, function(error, response, body) {\r\n            const bodyObj = JSON.parse(body);\r\n            //console.log(bodyObj);\r\n            // callback(bodyObj.items[0].liveStreamingDetails.activeLiveChatId);\r\n        });\r\n    };\r\n\r\n    const options = {\r\n        connection: {\r\n            cluster: 'aws',\r\n            reconnect: true,\r\n        },\r\n        identity: {\r\n            username: 'bot_rchiem',\r\n            password: 'oauth:3ydg9ojjthbb135lgpurekwdr8wu9f',\r\n        },\r\n        channels: ['starladder_cs_en'],\r\n    };\r\n\r\n    const client = new twitch.client(options);\r\n    client.connect();\r\n\r\n    client.on('chat', function(channel, user, message, self) {\r\n        let participants = require('fs');\r\n        participants.appendFileSync(\r\n            './participants.txt',\r\n            user['display-name'] + ' : ' + message + '\\n'\r\n        );\r\n    });\r\n}"],"file":"unionparser.js"}